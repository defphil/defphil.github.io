<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on &gt; phlm_</title>
    <link>https://phlm.xyz/posts/</link>
    <description>Recent content in Posts on &gt; phlm_</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC BY © 2019 Filip Miletic</copyright>
    <lastBuildDate>Wed, 20 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://phlm.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interim tech report for last 6 months</title>
      <link>https://phlm.xyz/posts/interim-tech-report/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phlm.xyz/posts/interim-tech-report/</guid>
      <description>With this post, I wanted to recap what changes I&#39;ve introduced to my digital life, on and offline. In general, I removed and deleted most of things. Went back to open source software, standardized formats that work everywhere(txt), reduced my iPhone usage... So lets start:
 I deleted Facebook. (Which I had from 2007. to 2012. and from 2015. until this moment)   I deleted Instagram. I realized I was not looking at the content I wanted and followed, but Facebook was serving me too much ads and content I really didn&#39;t care about, so I found out there was no point in having it.</description>
    </item>
    
    <item>
      <title>Change of perception thanks to Clojure</title>
      <link>https://phlm.xyz/posts/perception-clojure/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phlm.xyz/posts/perception-clojure/</guid>
      <description>It’s been quite some time since I wrote Clojure, probably around 2 months or so. I stumbled upon this blogpost by Connor Mendenhall. Reading it carefully without skimming is really recommended, and fun. It inspired me enough to write my first blogpost in 2019.
My first introduction to functional programming was through Scheme and SICP (I am re-reading this book for few years now, it never stops to amaze me). This would be the core concept that would slap me from the back of the head when I started getting my feet wet with Clojure.</description>
    </item>
    
  </channel>
</rss>